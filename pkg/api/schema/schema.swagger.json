{
  "swagger": "2.0",
  "info": {
    "title": "immudb REST API",
    "description": "\u003cb\u003eIMPORTANT\u003c/b\u003e: All \u003ccode\u003eget\u003c/code\u003e and \u003ccode\u003esafeget\u003c/code\u003e functions return \u003cu\u003ebase64-encoded\u003c/u\u003e keys and values, while all \u003ccode\u003eset\u003c/code\u003e and \u003ccode\u003esafeset\u003c/code\u003e functions expect \u003cu\u003ebase64-encoded\u003c/u\u003e inputs.",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/immurestproxy/batch/get": {
      "post": {
        "operationId": "GetBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItemList"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaKeyList"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/batch/set": {
      "post": {
        "operationId": "SetBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaIndex"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/immudbschemaKVList"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/consistencyproof/{index}": {
      "get": {
        "operationId": "Consistency",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaConsistencyProof"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/createdatabase": {
      "post": {
        "summary": "todo(joe-dz): Enable restore when the feature is required again\n\trpc Restore(stream pb.KVList) returns (ItemsCount) {\n\t\toption (google.api.http) = {\n\t\t\tpost: \"/v1/immurestproxy/restore\"\n\t\t\tbody: \"*\"\n\t\t};\n\t}",
        "operationId": "CreateDatabase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaCreateDatabaseReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaDatabase"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/dump": {
      "post": {
        "operationId": "Dump",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/definitions/pbKVList"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/healthresponse": {
      "get": {
        "operationId": "Health",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaHealthResponse"
            }
          }
        },
        "tags": [
          "ImmuService"
        ],
        "security": []
      }
    },
    "/v1/immurestproxy/history/{key}": {
      "get": {
        "operationId": "History",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItemList"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/inclusionproof/{index}": {
      "get": {
        "operationId": "Inclusion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaInclusionProof"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/iscan": {
      "post": {
        "operationId": "IScan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaPage"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaIScanOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item": {
      "post": {
        "operationId": "Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaIndex"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaKeyValue"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/count/{prefix}": {
      "get": {
        "operationId": "Count",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItemsCount"
            }
          }
        },
        "parameters": [
          {
            "name": "prefix",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/index/{index}": {
      "get": {
        "operationId": "ByIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItem"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/safe": {
      "post": {
        "operationId": "SafeSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaProof"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaSafeSetOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/safe/get": {
      "post": {
        "operationId": "SafeGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaSafeItem"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaSafeGetOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/safe/index/{index}": {
      "get": {
        "operationId": "BySafeIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaSafeItem"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "rootIndex.index",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/scan": {
      "post": {
        "operationId": "Scan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItemList"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaScanOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/{key}": {
      "get": {
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItem"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/login": {
      "post": {
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaLoginResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaLoginRequest"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ],
        "security": []
      }
    },
    "/v1/immurestproxy/logout": {
      "post": {
        "operationId": "Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/reference": {
      "post": {
        "operationId": "Reference",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaIndex"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaReferenceOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/root": {
      "get": {
        "operationId": "CurrentRoot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaRoot"
            }
          }
        },
        "tags": [
          "ImmuService"
        ],
        "security": []
      }
    },
    "/v1/immurestproxy/safe/reference": {
      "post": {
        "operationId": "SafeReference",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaProof"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaSafeReferenceOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/safe/zadd": {
      "post": {
        "operationId": "SafeZAdd",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaProof"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaSafeZAddOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user": {
      "post": {
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaCreateUserRequest"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user/deactivate": {
      "post": {
        "operationId": "DeactivateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaUserRequest"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user/list": {
      "get": {
        "operationId": "ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaUserList"
            }
          }
        },
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user/password/change": {
      "post": {
        "operationId": "ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user/permission/set": {
      "post": {
        "operationId": "SetPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaItem"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user/{user}": {
      "get": {
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/zadd": {
      "post": {
        "operationId": "ZAdd",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaIndex"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaZAddOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/zscan": {
      "post": {
        "operationId": "ZScan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItemList"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaZScanOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    }
  },
  "definitions": {
    "immudbschemaKVList": {
      "type": "object",
      "properties": {
        "KVs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaKeyValue"
          }
        }
      }
    },
    "pbKV": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "type": "string",
          "format": "byte"
        },
        "user_meta": {
          "type": "string",
          "format": "byte"
        },
        "version": {
          "type": "string",
          "format": "uint64"
        },
        "expires_at": {
          "type": "string",
          "format": "uint64"
        },
        "meta": {
          "type": "string",
          "format": "byte"
        },
        "stream_id": {
          "type": "integer",
          "format": "int64",
          "description": "Stream id is used to identify which stream the KV came from."
        },
        "stream_done": {
          "type": "boolean",
          "format": "boolean",
          "description": "Stream done is used to indicate end of stream."
        }
      }
    },
    "pbKVList": {
      "type": "object",
      "properties": {
        "kv": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbKV"
          }
        }
      }
    },
    "schemaChangePasswordRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "format": "byte"
        },
        "oldPassword": {
          "type": "string",
          "format": "byte"
        },
        "newPassword": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaConsistencyProof": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string",
          "format": "uint64"
        },
        "second": {
          "type": "string",
          "format": "uint64"
        },
        "firstRoot": {
          "type": "string",
          "format": "byte"
        },
        "secondRoot": {
          "type": "string",
          "format": "byte"
        },
        "path": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "schemaContent": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaCreateDatabaseReply": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/schemaError"
        }
      }
    },
    "schemaCreateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "format": "byte"
        },
        "password": {
          "type": "string",
          "format": "byte"
        },
        "permissions": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaDatabase": {
      "type": "object",
      "properties": {
        "databasename": {
          "type": "string"
        }
      }
    },
    "schemaError": {
      "type": "object",
      "properties": {
        "errorcode": {
          "type": "integer",
          "format": "int32"
        },
        "errormessage": {
          "type": "string"
        }
      }
    },
    "schemaHealthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "schemaIScanOptions": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string",
          "format": "uint64"
        },
        "pageNumber": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "schemaInclusionProof": {
      "type": "object",
      "properties": {
        "at": {
          "type": "string",
          "format": "uint64"
        },
        "index": {
          "type": "string",
          "format": "uint64"
        },
        "root": {
          "type": "string",
          "format": "byte"
        },
        "leaf": {
          "type": "string",
          "format": "byte"
        },
        "path": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "schemaIndex": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "schemaItem": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "schemaItemList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaItem"
          }
        }
      }
    },
    "schemaItemsCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "schemaKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaKeyList": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaKey"
          }
        }
      }
    },
    "schemaKeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaLayer": {
      "type": "object",
      "properties": {
        "l": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaNode"
          }
        }
      }
    },
    "schemaLoginRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "format": "byte"
        },
        "password": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaLoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "format": "byte"
        },
        "warning": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaNode": {
      "type": "object",
      "properties": {
        "i": {
          "type": "string",
          "format": "byte"
        },
        "h": {
          "type": "string",
          "format": "byte"
        },
        "refk": {
          "type": "string",
          "format": "byte"
        },
        "ref": {
          "type": "boolean",
          "format": "boolean"
        },
        "cache": {
          "type": "boolean",
          "format": "boolean"
        },
        "root": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "schemaPage": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaItem"
          }
        },
        "more": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "schemaProof": {
      "type": "object",
      "properties": {
        "leaf": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "type": "string",
          "format": "uint64"
        },
        "root": {
          "type": "string",
          "format": "byte"
        },
        "at": {
          "type": "string",
          "format": "uint64"
        },
        "inclusionPath": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "consistencyPath": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "schemaReferenceOptions": {
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "format": "byte"
        },
        "key": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaRoot": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "uint64"
        },
        "root": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaSPage": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaStructuredItem"
          }
        },
        "pageNum": {
          "type": "string",
          "format": "uint64"
        },
        "more": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "schemaSafeGetOptions": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "rootIndex": {
          "$ref": "#/definitions/schemaIndex"
        }
      }
    },
    "schemaSafeItem": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/schemaItem"
        },
        "proof": {
          "$ref": "#/definitions/schemaProof"
        }
      }
    },
    "schemaSafeReferenceOptions": {
      "type": "object",
      "properties": {
        "ro": {
          "$ref": "#/definitions/schemaReferenceOptions"
        },
        "rootIndex": {
          "$ref": "#/definitions/schemaIndex"
        }
      }
    },
    "schemaSafeSetOptions": {
      "type": "object",
      "properties": {
        "kv": {
          "$ref": "#/definitions/schemaKeyValue"
        },
        "rootIndex": {
          "$ref": "#/definitions/schemaIndex"
        }
      }
    },
    "schemaSafeStructuredItem": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/schemaStructuredItem"
        },
        "proof": {
          "$ref": "#/definitions/schemaProof"
        }
      }
    },
    "schemaSafeZAddOptions": {
      "type": "object",
      "properties": {
        "zopts": {
          "$ref": "#/definitions/schemaZAddOptions"
        },
        "rootIndex": {
          "$ref": "#/definitions/schemaIndex"
        }
      }
    },
    "schemaScanOptions": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "format": "byte"
        },
        "offset": {
          "type": "string",
          "format": "byte"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "reverse": {
          "type": "boolean",
          "format": "boolean"
        },
        "deep": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "schemaStructuredItem": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "$ref": "#/definitions/schemaContent"
        },
        "index": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "schemaStructuredItemList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaStructuredItem"
          }
        }
      }
    },
    "schemaStructuredKeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "$ref": "#/definitions/schemaContent"
        }
      }
    },
    "schemaTree": {
      "type": "object",
      "properties": {
        "t": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaLayer"
          }
        }
      }
    },
    "schemaUser": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "format": "byte"
        },
        "permissions": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaUserList": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaUser"
          }
        }
      }
    },
    "schemaUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "format": "byte"
        },
        "permissions": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaZAddOptions": {
      "type": "object",
      "properties": {
        "set": {
          "type": "string",
          "format": "byte"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "key": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Why use double as score type?\nBecause it is not purely about the storage size, but also use cases.\n64-bit floating point double gives a lot of flexibility and dynamic range, at the expense of having only 53-bits of integer."
    },
    "schemaZScanOptions": {
      "type": "object",
      "properties": {
        "set": {
          "type": "string",
          "format": "byte"
        },
        "offset": {
          "type": "string",
          "format": "byte"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "reverse": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
