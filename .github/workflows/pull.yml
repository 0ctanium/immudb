name: pullCI

on:
  pull_request:
    branches:
    - enh-it-763-pushtest
    - enh-it-763-push
    - enh-it-763
jobs:
  build:
    name: build
    strategy:
      matrix:
        include:
          - {os: ubuntu-latest, go: 1.13, immudb: "immudb", immuclient: "immuclient"}
          - {os: windows-latest, go: 1.15, immudb: "immudb.exe", immuclient: "immuclient.exe"}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/checkout@v1
      - name: Test
        run: make test
        if: runner.os == 'Linux'
      - name: Test Client
        run: make test-client
        if: runner.os == 'Windows'
        shell: bash
      - name: build all
        run: make all
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: immu-${{matrix.os}}
          path: |
            ${{github.workspace}}/${{matrix.immudb}}
            ${{github.workspace}}/${{matrix.immuclient}}


  coveralls:
    name: Coverage
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - uses: actions/checkout@v1
      - run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go get golang.org/x/tools/cmd/cover
          go get -u github.com/mattn/goveralls
          go get -u github.com/ory/go-acc
          set -o pipefail
          go-acc ./... --covermode=atomic --ignore test,immuclient,immuadmin,helper,cmdtest,sservice,version,tools || true
          cat coverage.txt | grep -v "schema.pb" | grep -v "immuclient" | grep -v "immuadmin" | grep -v "helper" | grep -v "cmdtest" | grep -v "sservice" | grep -v "version" | grep -v "tools" > coverage.out
          goveralls -coverprofile=coverage.out -service=gh-ci -repotoken ${{ secrets.COVERALLS_TOKEN }}
